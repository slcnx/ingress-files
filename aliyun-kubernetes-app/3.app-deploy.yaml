kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: myapp-label
  name: myapp
  namespace: myserver
spec:
  replicas: 2
  # 历史版本
  revisionHistoryLimit: 10
  strategy:
    # 升级策略
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app: myapp-selector
  template:
    metadata:
      labels:
        app: myapp-selector
    spec:
#      affinity:
#        podAntiAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            - labelSelector:
#                matchExpressions:
#                  - key: app
#                    operator: In
#                    values:
#                      - myapp-selector
#              topologyKey: topology.diskplugin.csi.alibabacloud.com/zone
      containers:
      - name: myapp-container
        image: registry.cn-beijing.aliyuncs.com/cloudcenter-ops/nginx:1.22.0
        #image: >-
        #   ${IMAGE}
        imagePullPolicy: IfNotPresent
        #imagePullPolicy: Always
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        startupProbe:
          failureThreshold: 3
          httpGet:
            path: /health/
            port: 80
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health/
            port: 80
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health/
            port: 80
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        lifecycle:
          preStop:
            exec:
              command:
              - "/bin/sh"
              - "-c"
              - "sleep 5; nginx -s quit; while [ -f /var/run/nginx.pid ]; do sleep 1; done"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/
          readOnly: true
      volumes:
      - name: nginx-config
        configMap:
          name: myapp-nginx-conf
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 300
---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: myapp-label
  name: myapp
  namespace: myserver
spec:
  #type: NodePort
  # deployments + NodePort/Loadbalancer时，修改为Local可以保留用户源地址，但是可能负载不均衡
  # 解决：daemonset + 不需要service. 负载均衡直达节点
  #externalTrafficPolicy: Cluster
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
    #nodePort: 40003
  selector:
    app: myapp-selector
  # LB没有会话粘性，有的，负载不均衡
  sessionAffinity: None
